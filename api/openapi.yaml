openapi: 3.0.0
info:
  title: Beach Family Pools API
  description: Beach Family Pools Services API
  version: 1.0.0
servers:
- url: http://api.beachfamilypools.com:4000/api/v1
paths:
  /users:
    get:
      tags:
      - users
      summary: Returns a list of all users
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        "500":
          description: Internal server error
      x-swagger-router-controller: Users
  /customers:
    get:
      tags:
      - customers
      summary: Returns a list of all customers
      operationId: getCustomers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
        "500":
          description: Internal server error
      x-swagger-router-controller: Customers
    post:
      tags:
      - customers
      summary: Adds a single customer
      operationId: addCustomer
      requestBody:
        $ref: '#/components/requestBodies/Customer'
      responses:
        "200":
          description: JSON object with customer information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "405":
          description: Invalid input
      x-swagger-router-controller: Customers
  /customers/{id}:
    get:
      tags:
      - customers
      summary: Returns a single customer
      operationId: getCustomerById
      parameters:
      - name: id
        in: path
        description: Id of customer to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: JSON object with customer information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "400":
          description: Invalid ID
        "404":
          description: Customer not found
      x-swagger-router-controller: Customers
    put:
      tags:
      - customers
      summary: Updates an existing customer
      operationId: updateCustomer
      parameters:
      - name: id
        in: path
        description: Id of customer to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/Customer'
      responses:
        "200":
          description: JSON object with customer information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "400":
          description: Invalid ID
        "404":
          description: Customer not found
        "405":
          description: Validation exception
      x-swagger-router-controller: Customers
  /addresses:
    get:
      tags:
      - addresses
      summary: Returns a list of all service addresses
      operationId: getAddresses
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses'
        "500":
          description: Internal server error
      x-swagger-router-controller: Addresses
    post:
      tags:
      - addresses
      summary: Adds a single service address
      operationId: addAddress
      requestBody:
        $ref: '#/components/requestBodies/Address'
      responses:
        "200":
          description: JSON object with service address information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        "405":
          description: Invalid input
      x-swagger-router-controller: Addresses
  /addresses/{id}:
    get:
      tags:
      - addresses
      summary: Returns a single service address
      operationId: getAddressById
      parameters:
      - name: id
        in: path
        description: Id of service address to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: JSON object with service address information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        "400":
          description: Invalid ID
        "404":
          description: Service address not found
      x-swagger-router-controller: Addresses
    put:
      tags:
      - addresses
      summary: Updates an existing service address
      operationId: updateAddress
      parameters:
      - name: id
        in: path
        description: Id of service address to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/Address'
      responses:
        "200":
          description: JSON object with service address information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        "400":
          description: Invalid ID
        "404":
          description: Address not found
        "405":
          description: Validation exception
      x-swagger-router-controller: Addresses
  /serviceCalls:
    get:
      tags:
      - service calls
      summary: Returns a list of all service calls/work orders
      operationId: getServiceCalls
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCalls'
        "500":
          description: Internal server error
      x-swagger-router-controller: ServiceCalls
    post:
      tags:
      - service calls
      summary: Adds a single service call/work order
      operationId: addServiceCall
      requestBody:
        $ref: '#/components/requestBodies/ServiceCall'
      responses:
        "200":
          description: JSON object with service call information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCalls'
        "405":
          description: Invalid input
      x-swagger-router-controller: ServiceCalls
  /serviceCalls/{id}:
    get:
      tags:
      - service calls
      summary: Returns a single service call/work order
      operationId: getServiceCallById
      parameters:
      - name: id
        in: path
        description: Id of service call/work order to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: JSON object with service address information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCall'
        "400":
          description: Invalid ID
        "404":
          description: Service call not found
      x-swagger-router-controller: ServiceCalls
components:
  schemas:
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
    User:
      required:
      - userRole
      - firstName
      - lastName
      - emailAddress
      type: object
      properties:
        id:
          type: integer
        isAdmin:
          type: boolean
        userRole:
          type: string
          enum:
          - employee
          - customer
          - vendor
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        emailAddress:
          type: string
        hash:
          type: string
      example:
        isAdmin: true
        userRole: employee
        firstName: firstName
        lastName: lastName
        phoneNumber: phoneNumber
        emailAddress: emailAddress
        hash: hash
    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    Customer:
      required:
      - customerName
      type: object
      properties:
        id:
          type: integer
        customerName:
          type: string
        phoneNumber:
          type: string
        emailAddress:
          type: string
      example:
        customerName: customerName
        phoneNumber: phoneNumber
        emailAddress: emailAddress
    Addresses:
      type: array
      items:
        $ref: '#/components/schemas/Address'
    Address:
      required:
      - city
      - postalCode
      - state
      - streetAddress
      - userId
      type: object
      properties:
        id:
          type: string
        streetAddress:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        userId:
          type: integer
        mapUrl:
          type: string
        photoUrl:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        customerId:
          type: integer
        vendorId:
          type: integer
      example:
        streetAddress: streetAddress
        city: city
        postalCode: postalCode
        state: state
        userId: null
        mapUrl: mapUrl
        photoUrl: photoUrl
        latitude: latitude
        longitude: longitude
        customerId: 1
        vendorId: null
    ServiceCalls:
      type: array
      items:
        $ref: '#/components/schemas/ServiceCall'
    ServiceCall:
      required:
      - serviceDate
      - serviceAddressId
      - userId
      - technician
      - startTime
      - endTime
      type: object
      properties:
        id:
          type: string
        serviceDate:
          type: string
        salt:
          type: string
        phosphates:
          type: string
        tds:
          type: string
        filterPsi:
          type: string
        chlorine:
          type: string
        ph:
          type: string
        alkalinity:
          type: string
        cya:
          type: string
        trichlorShock:
          type: string
        sodaAsh:
          type: string
        sodiumBicarbonate:
          type: string
        tabs:
          type: integer
        granularTrichlor:
          type: string
        phosphateRemover:
          type: string
        userid:
          type: integer
        serviceAddressId:
          type: integer
        technician:
          type: string
        startTime:
          type: string
        endTime:
          type: string
      example:
        serviceDate: serviceDate
        salt: salt
        phosphates: phosphates
        tds: tds
        filterPsi: filterPsi
        chlorine: chlorine
        ph: ph
        alkalinity: alkalinity
        cya: cya
        trichlorShock: trichlorShock
        sodaAsh: sodaAsh
        sodiumBicarbonate: sodiumBicarbonate
        tabs: tabs
        granularTrichlor: granularTrichlor
        userid: 1
        serviceAddressId: 4
        technician: technician
        startTime: startTime
        endTime: endTime
  responses:
    Customer200:
      description: JSON object with customer information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    Address200:
      description: JSON object with service address information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Address'
  requestBodies:
    Customer:
      description: JSON object with customer information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
      required: true
    Address:
      description: JSON object with service address information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Address'
      required: true
    ServiceCall:
      description: JSON object with service call information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceCall'
      required: true
